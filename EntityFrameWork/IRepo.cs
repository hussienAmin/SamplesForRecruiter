using KafApp.Models;


namespace KafApp.Repo.Server
{
    public interface Irepo
    {
        Task<KafQueryResult> AddBonusToCashOrder(CashOrderBonus md);
        Task<KafQueryResult> AddBonusToCustomerOrder(CustomerOrderBonus md);
        Task<KafQueryResult> AddBonusToSupply(SupplyBonus md);
        Task<KafQueryResult> AddEntity<T>(T md) where T : IdableInvoice;
        Task<KafQueryResult> AddItemToCashOrder(CashOrderItem md);
        Task<KafQueryResult> AddItemToCustomerOrder(CustomerOrderItem md);
        Task<KafQueryResult> AddItemToSupply(SupplyItem md);
        Task<KafQueryResult> AddNewCapitalDeposit(CapitalDeposit md);
        Task<KafQueryResult> AddNewCapitalWithdrawal(CapitalWithdrawal md);
        Task<KafQueryResult> AddNewCashOrder(CashOrder md);
        Task<KafQueryResult> AddNewCustomerOrder(CustomerOrder md);
        Task<KafQueryResult> AddNewCustomerOrderPayment(CustomerOrderPayment md);
        Task<KafQueryResult> AddNewCustomerPayment(CustomerPayment md);
        Task<KafQueryResult> AddNewCustomerReturn(CustomerReturn md);
        Task<KafQueryResult> AddNewCycle(string txt);
        Task<KafQueryResult> AddNewEmployeeAdvancePayment(EmployeeAdvancePayment md);
        Task<KafQueryResult> AddNewEmployeeDeduction(EmployeeDeduction md);
        Task<KafQueryResult> AddNewEmployeeIncentive(EmployeeIncentive md);
        Task<KafQueryResult> AddNewEmployeePayroll(EmployeeSalaryDisbursement md);
        Task<KafQueryResult> AddNewSupplierPayment(SupplierPayment md);
        Task<KafQueryResult> AddNewSupplierReturn(SupplierReturn md);
        Task<KafQueryResult> AddNewSupply(Supply md);
        Task<KafQueryResult> AddNewSupplyPayment(SupplyPayment md);
        Task<KafQueryResult> AddNote(Note md);
        Task<KafQueryResult> AddPosProduct(int IId, int PosGroupId);
        Task<KafQueryResult> AddProduct(Product md);
        Task<KafQueryResult> AddProfitDistribute(ProfitDistribute md);
        Task<KafQueryResult> ArchiveCustomerOrder(int IId);
        Task<KafQueryResult> ArchiveCustomerPayment(int IId);
        Task<KafQueryResult> ArchiveCustomerReturn(int IId);
        Task<KafQueryResult> ArchiveEntity<T>(int IId) where T : KafEntity;
        Task<KafQueryResult> ArchiveSupplierPayment(int IId);
        Task<KafQueryResult> ArchiveSupplierReturn(int IId);
        Task<KafQueryResult> ArchiveSupply(int IId);
        Task<KafQueryResult> AuthonticateUser(int IId);
        Task<KafQueryResult> CanLoginAndCreateNewSession(string name, string ppass, string hhash);
        Task<KafQueryResult> DeAuthonticateUser(int IId);
        Task<KafQueryResult> DeleteCapitalDeposit(int IId);
        Task<KafQueryResult> DeleteCapitalWithdrawal(int IId);
        Task<KafQueryResult> DeleteCashOrder(int IId);
        Task<KafQueryResult> DeleteCashOrderBonus(int IId);
        Task<KafQueryResult> DeleteCashOrderItem(int IId);
        Task<KafQueryResult> DeleteCustomerOrder(int IId);
        Task<KafQueryResult> DeleteCustomerOrderBonus(int IId);
        Task<KafQueryResult> DeleteCustomerOrderItem(int IId);
        Task<KafQueryResult> DeleteCustomerOrderPayment(int IId);
        Task<KafQueryResult> DeleteCustomerPayment(int IId);
        Task<KafQueryResult> DeleteCustomerReturn(int IId);
        Task<KafQueryResult> DeleteProfitDistribute(int IId);
        Task<KafQueryResult> DeleteSupplierPayment(int IId);
        Task<KafQueryResult> DeleteSupplierReturn(int IId);
        Task<KafQueryResult> DeleteSupply(int IId);
        Task<KafQueryResult> DeleteSupplyBonus(int IId);
        Task<KafQueryResult> DeleteSupplyItem(int IId);
        Task<KafQueryResult> DeleteSupplyPayment(int IId);
        Task<KafQueryResult> DeMark<T>(int IId) where T : KafEntity;
        Task<KafQueryResult> DisablePaymentOption(int IId);
        Task<KafQueryResult> EnablePaymentOption(int IId);
        Task<KafQueryResult> GetAll<T>() where T : class;
        Task<KafQueryResult> GetAllArchivedEntities<T>(KafSearchOption option) where T : KafEntity, new();
        Task<KafQueryResult> GetAllArchivedEntitiesCount<T>() where T : KafEntity;
        Task<KafQueryResult> GetAllPersons<T>() where T : KafEntity;
        Task<KafQueryResult> GetAllExpences(int[] h);
        Task<KafQueryResult> GetAllInvoiceItems<T>(KafSearchOption option) where T : BaseInvoiceItem;
        Task<KafQueryResult> GetAllNotes();
        Task<KafQueryResult> GetAllProductStores(int iid);
        Task<KafQueryResult> GetAllProductUnits(int iid);
        Task<KafQueryResult> GetAllUnArchived<T>() where T : Person;
        Task<KafQueryResult> GetArchivedInvoiceCount<T>(KafSearchOption option) where T : BaseInvoice;
        Task<KafQueryResult> GetArchivedInvoices<T>(KafSearchOption option) where T : BaseInvoice;
        Task<KafQueryResult> GetAvailableCategories(int StrId);
        Task<KafQueryResult> GetAvailableProductByBarcode(string value, int StrId);
        Task<KafQueryResult> GetAvailableProductByCategory(int value, int StrId);
        Task<KafQueryResult> GetAvailableProductByText(string value, int StrId);
        Task<KafQueryResult> GetBonusItems<T>(KafSearchOption option) where T : BaseInvoiceBonus;
        Task<KafQueryResult> GetById<T>(int IId) where T : KafEntity;
        Task<KafQueryResult> GetCashOrders(KafSearchOption option);
        Task<KafQueryResult> GetCategoriesForNewSupply(int StrId);
        Task<KafQueryResult> GetCustomerOrders(KafSearchOption option);
        Task<KafQueryResult> GetCustomerReturns(KafSearchOption option);
        Task<KafQueryResult> GetCycleViewData(int IId);
        Task<KafQueryResult> GetDailyViewData();
        Task<KafQueryResult> GetEmployeeData(int IId);
        Task<KafQueryResult> GetEnabledPaymentOptions();
        Task<KafQueryResult> GetInvoiceById<T>(int IId) where T : BaseOperation;
        Task<KafQueryResult> GetJustNameAndId<T>() where T : KafEntity, new();
        Task<KafQueryResult> GetPartnerViewData(Partner md);
        Task<KafQueryResult> GetPayments<T>(KafSearchOption option) where T : BasePayment;
        Task<KafQueryResult> GetPosProducts();
        Task<KafQueryResult> GetProductByBarcode(string value, int StrId);
        Task<KafQueryResult> GetProductByCategory(int value, int StrId);
        Task<KafQueryResult> GetProductByText(string value, int StrId);
        Task<KafQueryResult> GetProfitDistributes(KafSearchOption option);
        Task<KafQueryResult> GetSessionInfo(int SessionId);
        Task<KafQueryResult> GetStoreData(Store md);
        Task<KafQueryResult> GetSupplierReturns(KafSearchOption option);
        Task<KafQueryResult> GetSupplys(KafSearchOption option);
        Task<KafQueryResult> IsConnectionDone();
        Task<KafQueryResult> Mark<T>(int IId) where T : KafEntity;
        Task<KafQueryResult> ReadPhoto<T>(int IId) where T : class;
        Task<KafQueryResult> RemoveEntity<T>(int IId) where T : KafEntity;

        Task<KafQueryResult> RestoreCustomerOrder(int IId);
        Task<KafQueryResult> RestoreCustomerReturn(int IId);
        Task<KafQueryResult> RestoreEntity<T>(int IId) where T : KafEntity;
        Task<KafQueryResult> RestoreSupplierReturn(int IId);
        Task<KafQueryResult> RestoreSupply(int IId);
        Task<KafQueryResult> SaveAuthChanges(Usersgroup md);
        Task<KafQueryResult> TryCloseCycle(int IId);
        Task<KafQueryResult> UpdateAddress<T>(int IId, string txt) where T : KafEntity;
        Task<KafQueryResult> UpdateCashOrderAdded(int IId, decimal newval);
        Task<KafQueryResult> UpdateCashOrderDiscount(int IId, decimal newval);
        Task<KafQueryResult> UpdateCashOrderExpence(int IId, decimal newval);
        Task<KafQueryResult> UpdateCashOrderItem(CashOrderItem Newmd);
        Task<KafQueryResult> UpdateCustomerMaxCredit(int IId, int txt);
        Task<KafQueryResult> UpdateCustomerOrderAdded(int IId, decimal newval);
        Task<KafQueryResult> UpdateCustomerOrderDiscount(int IId, decimal newval);
        Task<KafQueryResult> UpdateCustomerOrderExpence(int IId, decimal newval);
        Task<KafQueryResult> UpdateCustomerOrderItem(CustomerOrderItem Newmd);
        Task<KafQueryResult> UpdateCustomerOrderPaymentValue(int IId, decimal newval);
        Task<KafQueryResult> UpdateCustomerPaymentValue(int IId, decimal Newval);
        Task<KafQueryResult> UpdateMail<T>(int IId, string txt) where T : KafEntity;
        Task<KafQueryResult> UpdateName<T>(int IId, string txt) where T : KafEntity;
        Task<KafQueryResult> UpdateNotes<T>(int IId, string txt) where T : Notable;
        Task<KafQueryResult> UpdatePaymentOptionAccount(int IId, string txt);
        Task<KafQueryResult> UpdatePhone<T>(int IId, string txt) where T : KafEntity;
        Task<KafQueryResult> UpdatePhoto<T>(int IId, byte[] txt) where T : class;
        Task<KafQueryResult> UpdateProdsuctCategory(int IId, int val);
        Task<KafQueryResult> UpdateProductCompany(int IId, string txt);
        Task<KafQueryResult> UpdateProductDescription(int IId, string txt);
        Task<KafQueryResult> UpdateProductMinimumQuntity(int IId, int val);
        Task<KafQueryResult> UpdateProductPhoto(int IId, byte[] txt);
        Task<KafQueryResult> UpdateSupplierPaymentValue(int IId, decimal Newval);
        Task<KafQueryResult> UpdateSupplyAdded(int IId, decimal newval);
        Task<KafQueryResult> UpdateSupplyDiscount(int IId, decimal newval);
        Task<KafQueryResult> UpdateSupplyExpence(int IId, decimal newval);
        Task<KafQueryResult> UpdateSupplyItem(SupplyItem Newmd);
        Task<KafQueryResult> UpdateSupplyPaymentValue(int IId, decimal newval);
        Task<KafQueryResult> UpdateUserAlias(int IId, string txt);
        Task<KafQueryResult> UpdateUserGroup(int IId, int GroupId);
        Task<KafQueryResult> UpdateUserPassword(int IId, string txt);
    }

}